services:
    # DTO related services
    Mell\Bundle\SimpleDtoBundle\Services\RequestManager\RequestManagerConfigurator:
        arguments:
            - '%simple_dto.param_fields%'
            - '%simple_dto.param_expands%'
            - '%simple_dto.param_limit%'
            - '%simple_dto.param_offset%'
            - '%simple_dto.param_sort%'
            - '%simple_dto.param_locale%'
            - '%simple_dto.header_locale%'
            - '%simple_dto.param_links%'
            - '%simple_dto.param_filters%'
            - '%simple_dto.param_count%'
    Mell\Bundle\SimpleDtoBundle\Model\DtoManagerConfigurator:
        arguments:
            - '%simple_dto.collection_key%'
            - '%simple_dto.date_format%'
            - '%simple_dto.date_time_format%'
    Mell\Bundle\SimpleDtoBundle\Services\RequestManager\RequestManager:
        autowire: true
        configurator: ['@Mell\Bundle\SimpleDtoBundle\Services\RequestManager\RequestManagerConfigurator', configure]
    Mell\Bundle\SimpleDtoBundle\Services\Dto\DtoManager:
        autowire: true
        configurator: ['@Mell\Bundle\SimpleDtoBundle\Model\DtoManagerConfigurator', configure]
    Mell\Bundle\SimpleDtoBu\SimpleDtoBundle\Services\Crud\RelationManager:
        autowire: true
    Mell\Bundle\SimpleDtoBundle\Services\Crud\CrudManager:
        autowire: true
    Mell\Bundle\SimpleDtoBundle\Services\Dto\DtoLinksManager:
        autowire: true
    Mell\Bundle\SimpleDtoBundle\Services\Crud\RelationManager:
        autowire: true
    Mell\Bundle\SimpleDtoBundle\Services\ApiFiltersManager\ApiFiltersManager: ~
    Mell\Bundle\SimpleDtoBundle\Services\ORM\ClassUtils: ~
    Mell\Bundle\SimpleDtoBundle\Services\Dto\DtoExpandsManager:
        autowire: true
    # Api docs related services
    Mell\Bundle\SimpleDtoBundle\Parser\ApiDocParser\DtoParser:
        autowire: true
        tags:
            - { name: nelmio_api_doc.extractor.parser }
#    Mell\Bundle\SimpleDtoBundle\Handler\ApiDocHandler\ApiDocHandler:
#        autowire: true
#        arguments:
#            $hateoasEnabled: '%simple_dto.hateoas_enabled%'
#        tags:
#            - { name: nelmio_api_doc.extractor.handler }

    # Event listeners
    Mell\Bundle\SimpleDtoBundle\EventListener\DtoExpandsListener:
        autowire: true
        tags:
            - { name: kernel.event_listener, event: simple_dto.post_dto_encode, method: onPostDtoEncode }
            - { name: kernel.event_listener, event: simple_dto.post_dto_collection_encode, method: onPostDtoCollectionEncode }
    Mell\Bundle\SimpleDtoBundle\EventListener\ListQueryBuilderListener:
        autowire: true
        tags:
            - { name: kernel.event_listener, event: simple_dto.pre_collection_load, method: onPreCollectionLoad }
    Mell\Bundle\SimpleDtoBundle\EventListener\DtoLinksListener:
        autowire: true
        arguments:
            $linksEnabled: '%simple_dto.hateoas_enabled%'
        calls:
            - ['setContainer', ['@service_container']]
        tags:
            - { name: kernel.event_listener, event: simple_dto.post_dto_encode, method: onPostDtoEncode }
            - { name: kernel.event_listener, event: simple_dto.post_dto_collection_encode, method: onPostDtoCollectionEncode }
    Mell\Bundle\SimpleDtoBundle\EventListener\ApiFiltersListener:
        autowire: true
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }
    Mell\Bundle\SimpleDtoBundle\EventListener\RelationListener:
        autowire: true
        tags:
            - { name: kernel.event_listener, event: simple_dto.post_deserialize, method: updateRelations }
    # serializer
    Symfony\Component\Serializer\Normalizer\DateTimeNormalizer:
        arguments:
            - 'c'
        public: false
        tags:
            - { name: serializer.normalizer }
